description: |
  Send a status alert to Mattermost at the end of a job, based on success or failure.
  Must be the last step in a job.

parameters:
  webhook:
    type: string
    default: ""
    description: Enter either your Webhook URL or use the CircleCI UI
      to add your Webhook URL under the 'MM_WEBHOOK' env var

  success_message:
    type: string
    default: Your CircleCI Job has succeeded
    description: Enter your custom message for a successed job. You can add @username of any user to be mentioned. It can also contains "@channel", "@here" or "@all"

  failure_message:
    type: string
    default: Your CircleCI Job has failed
    description: Enter your custom message for a failed job. You can add @username of any user to be mentioned. It can also contains "@channel", "@here" or "@all"

steps:
  - run:
      name: Provide error if curl is not installed.
      command: |
        which curl > curl_exists; echo $? | grep -q '1' && echo curl not installed && rm curl_exists && exit 1
        rm curl_exists

  - run:
      name: Provide error if non-bash shell
      command: |
        if [ ! -x /bin/bash ]; then
          echo Bash not installed.
          exit 1
        fi

  - run:
      name: Mattermost - Setting Failure Condition and set custom message
      command: |
        echo 'export MM_BUILD_IS_FAILED="true"' >> $BASH_ENV
        echo 'export MM_MESSAGE="<< parameters.failure_message >>"' >> $BASH_ENV
      when: on_fail

  - run:
      name: Mattermost - Setting Success Condition and set custom message
      command: |
        echo 'export MM_BUILD_IS_FAILED="false"' >> $BASH_ENV
        echo 'export MM_MESSAGE="<< parameters.success_message >>"' >> $BASH_ENV
      when: on_success

  - run:
      name: Mattermost - Sending Status Alert
      shell: /bin/bash
      when: always
      environment:
        WEBHOOK_URL: << parameters.webhook >>
        IS_WAITING_APPROVAL: "false"
      command: <<include(scripts/send_notification.sh)>>
